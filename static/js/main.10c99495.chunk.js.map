{"version":3,"sources":["logo.svg","blank.js","game.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","blank","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","clickHandler","bind","assertThisInitialized","state","afterClick","console","log","evt","haveClicked","finish","position","setState","clickChess","player","playerColor","react_default","a","createElement","className","value","onClick","Component","defaultProps","width","height","game","newGame","chess","gameState","chessBoard","click","checkWinner","reset","initialChess","initialGameState","initialChessBoard","initialClick","i","push","whichPlayer","newChessBoard","toConsumableArray","newClick","chessIndex","thRow","Math","floor","leftBound","rightBound","counter","newLeftBound","newthRow","newRightBound","_this2","playing","winner","style","textAlign","displayChess","map","src_blank_0","key","id","App","src_game_0","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.10c99495.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, {Component} from 'react';\r\nimport './blank.css'\r\n\r\n\r\nclass blank extends Component\r\n{\r\n\tstatic defaultProps ={\r\n\t\twidth : '30px',\r\n\t\theight: '30px',\r\n\t\t\r\n\t\t\r\n\t}\r\n\t\r\n\tconstructor(props)\r\n\t{\r\n\t\tsuper(props);\r\n\t\tthis.clickHandler=this.clickHandler.bind(this);\r\n\t\tthis.state=({\r\n\t\t\tafterClick:false\r\n\t\t});\r\n\t\tconsole.log(\"Blank Constructor\");\r\n\t\t\r\n\t}\r\n\t\r\n\r\n\r\n    clickHandler(evt)\r\n    {\r\n\t\t\r\n\t\t\r\n\t\tif(this.props.haveClicked||this.props.finish){\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t   const val=this.props.position;\r\n\t\t\r\n\t\r\n\t   this.setState({afterClick:true});\r\n\t   this.props.clickChess(this.props.position,this.props.player);  \r\n\t}\r\n\t\r\n    componentDidUpdate(){\r\n\t\tconsole.log(\"mount\");\r\n\t\t\r\n\t}\r\n\r\n   \r\n  \r\n\trender()\r\n\t{\r\n\t\t//console.log(this.props.player);\r\n\t\tvar playerColor='';\r\n\t\t\r\n\t\tif(this.props.playerColor===1&&this.state.afterClick)\r\n\t\t{\r\n\t\t\tplayerColor='blackCircle';\r\n\t\t}\r\n\t\tif(this.props.playerColor===2&&this.state.afterClick)\r\n\t\t{\r\n\t\t\tplayerColor='redCircle';\r\n\t\t}\r\n\t\t\r\n\t\treturn(\r\n\t\t\t\r\n\t\t\t\r\n\t\t     <div className='chess' value={this.props.position}  onClick={this.clickHandler}>\r\n\t\t\t    \r\n\t\t\t   <div className={playerColor} >\r\n\t\t\t\r\n\t\t\t   </div>\r\n\t\t       \r\n\t\t     </div>\r\n\t\t\t\r\n\t\t\t\r\n\t\t);\r\n\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\r\n\t}\r\n}\r\nexport default blank;","import React, {Component} from 'react';\r\nimport Blank from './blank.js';\r\nimport './game.css';\r\nclass game extends Component\r\n{\r\n\t\r\n\t\r\n\tconstructor(props)\r\n\t{\r\n\t\tconsole.log(\"Game constructor\");\r\n\t\tsuper(props);\r\n\t\tthis.state=({\r\n\t\t\tnewGame:true,\r\n\t\t\tplayer:1,\r\n\t\t\tchess:[],         //1 2 3 4 5 6...\r\n\t\t\tgameState:[],     // 0 0 0 0...\r\n\t\t\tchessBoard:[],     //Initially : 0 0 0 0...   After: 1 and 2\r\n\t\t\tclick:[]\r\n\t\t\t\t\t});\r\n\t\tthis.clickChess=this.clickChess.bind(this);\r\n\t\tthis.checkWinner=this.checkWinner.bind(this);\r\n\t\tthis.reset=this.reset.bind(this);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tcomponentDidMount()  //only call once after the first render\r\n\t{\r\n\t\t//console.log(\"didmount\");\r\n\t\tconst initialChess=[];\r\n\t\tconst initialGameState=[];\r\n\t\tconst initialChessBoard=[];\r\n\t\tconst initialClick=[];\r\n\t\tfor(var i=0;i<196;i++)\r\n\t\t{\r\n\t\t\tinitialGameState.push(0);\r\n\t\t\tinitialChess.push(i);\r\n\t\t\tinitialChessBoard.push(0);\r\n\t\t\tinitialClick.push(false);\r\n\t\t\t\r\n\t\t}\r\n\t\tthis.setState({\r\n\t\t\tchess:initialChess,\r\n\t\t\tgame:initialGameState,\r\n\t\t\tchessBoard:initialChessBoard\r\n\t\t})\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tclickChess(position,whichPlayer)  //Identify which one is clicked\r\n\t{\r\n\t\t//console.log(\"position \",position);\r\n\t\tvar newChessBoard=[...this.state.chessBoard];\r\n\t\tnewChessBoard[position]=whichPlayer;\r\n\t\tvar newClick=[...this.state.click];\r\n\t\tnewClick[position]=true;\r\n\t\tif(this.state.player===1){\r\n\t\t\tthis.setState({player:2,chessBoard:newChessBoard,newGame:false,click:newClick});\r\n\t\t}\r\n\t\t\r\n\t    if(this.state.player===2)\r\n\t   {\r\n\t\t\tthis.setState({player:1,chessBoard:newChessBoard,newGame:false,click:newClick});\r\n\t   }\r\n\t}\r\n\t\r\n\r\n\t\r\n\r\n\t\r\n\t\r\n\tcheckWinner()\r\n\t{\r\n\t\tfor(var chessIndex=0;chessIndex<196;chessIndex++)\r\n\t\t{\r\n\t\t\tvar thRow=Math.floor(chessIndex/14);\r\n\t\t\tvar leftBound=thRow*14;\r\n\t\t\tvar rightBound=(thRow+1)*14-1;\r\n\t\t\tvar counter=0;\r\n\t\t\tif(this.state.chessBoard[chessIndex]!==0)  //first, can not be zero\r\n\t\t\t{\r\n\t\t\t\t\r\n\t\t\t\tfor(var i=1;i<5;i++)\r\n\t\t\t\t{\r\n\t\t\t\t\tif(chessIndex+i<rightBound)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif(this.state.chessBoard[chessIndex]===this.state.chessBoard[chessIndex+i]){counter++;}\r\n\t\t\t\t\t\tif(counter===4){return true;}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tcounter=0; //reset the counter for each different kinds of test\r\n\t\t\t\tfor(var i=1;i<5;i++)\r\n\t\t\t\t{\r\n\t\t\t\t\tif(chessIndex-i>leftBound)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif(this.state.chessBoard[chessIndex]===this.state.chessBoard[chessIndex-i]){counter++;}\r\n\t\t\t\t\t\tif(counter===4){return true;}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tcounter=0;\r\n\t\t\t\tfor(var i=1;i<5;i++)\r\n\t\t\t\t{\r\n\t\t\t\t\tif(chessIndex+i*14<196)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif(this.state.chessBoard[chessIndex]===this.state.chessBoard[chessIndex+i*14]){counter++;}\r\n\t\t\t\t\t\tif(counter===4){return true;}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tcounter=0;\r\n\t\t\t\tfor(var i=1;i<5;i++)\r\n\t\t\t\t{\r\n\t\t\t\t\tif(chessIndex-i*14>0)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif(this.state.chessBoard[chessIndex]===this.state.chessBoard[chessIndex-i*14]){counter++;}\r\n\t\t\t\t\t\tif(counter===4){return true;}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tcounter=0;\r\n\t\t\t\t\r\n\t\t\t\tfor(var i=1;i<5;i++)\r\n\t\t\t\t{\r\n\t\t\t\t\tvar newthRow=thRow+i;\r\n\t\t\t\t\tvar newLeftBound=newthRow*14;\r\n\t\t\t        var newRightBound=(newthRow+1)*14-1;\r\n\t\t\t\t\tif(newthRow>=0&&newthRow<=13&&chessIndex+i*15>=newLeftBound&&chessIndex+i*15<=newRightBound)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif(this.state.chessBoard[chessIndex]===this.state.chessBoard[chessIndex+i*15]){counter++;}\r\n\t\t\t\t\t\tif(counter===4){ return true;}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\tcounter=0;\r\n\t\t\t\t\r\n\t\t\t\tfor(var i=1;i<5;i++)\r\n\t\t\t\t{\r\n\t\t\t\t\tvar newthRow=thRow+i;\r\n\t\t\t\t\tvar newLeftBound=newthRow*14;\r\n\t\t\t        var newRightBound=(newthRow+1)*14-1;\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(newthRow>=0&&newthRow<=13&&chessIndex+i*13>=newLeftBound&&chessIndex+i*13<=newRightBound)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t//if(chessIndex===20){console.log(chessIndex+i*13);console.log(this.state.chessBoard[chessIndex+i*13]);}\r\n\t\t\t\t\t\tif(this.state.chessBoard[chessIndex]===this.state.chessBoard[chessIndex+i*13]){counter++;}\r\n\t\t\t\t\t\tif(counter===4){return true;}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t     } \r\n\t\t}\r\n\t\treturn false;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\r\n\treset()\r\n\t{\r\n\t\tconst initialClick=[];\r\n\t\tconst initialChess=[];\r\n\t\tconst initialGameState=[];\r\n\t\tconst initialChessBoard=[];\r\n\t\tfor(var i=0;i<196;i++)\r\n\t\t{\r\n\t\t\tinitialGameState.push(0);\r\n\t\t\t\r\n\t\t\tinitialChess.push\r\n\t\t\t(i);\r\n\t\t\tinitialChessBoard.push(0);\r\n\t\t\tinitialClick.push(false);\r\n\t\t}\r\n\t\tthis.setState({\r\n\t\t\tnewGame:true,\r\n\t\t\tplayer:1,\r\n\t\t\tchess:initialChess,        \r\n\t\t\tgameState:initialGameState,     \r\n\t\t\tchessBoard:initialChessBoard,\r\n\t\t\tclick:initialClick\r\n\t\t});\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\r\n\trender()\r\n\t{\r\n\t\tvar playing='';\r\n\t\tvar winner='';\r\n\t\tvar finish=this.checkWinner();\r\n\t\tif(finish)\r\n\t\t{\r\n\t\t      if(this.state.player===2)\r\n\t\t      { winner=<h1 className=\"animation\" style={{textAlign:'center'}}>Player1 win</h1>;}\r\n\t\t\t\r\n\t\t\t  if(this.state.player===1)\r\n\t\t      { winner=<h1 className=\"animation\" style={{textAlign:'center'}}>Player2 win</h1>;}\r\n\t\t}\r\n\t\tif(!finish)\r\n\t\t{\r\n\t\t\tplaying=<h1 style={{textAlign:'center'}}>Player {this.state.player}</h1>;\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\tconst displayChess=this.state.chess.map((i)=>{\r\n\t\t\t//console.log(\"chessBoard\",this.state.chessBoard[i]);\r\n\t\t\treturn <Blank key={i} position={i} clickChess={this.clickChess} player={this.state.player}\r\n\t\t\t          haveClicked={this.state.click[i]} newGame={this.state.newGame} finish={finish}  playerColor={this.state.chessBoard[i]}/>  });\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\treturn(\r\n\t\t\t\r\n\t\t\t\r\n\t\t  <div>\r\n\t\t       {playing}\r\n\t\t\t    {winner}\r\n\t\t\t   <div id='allChess'>\r\n\t\t\t     {displayChess}\r\n\t\t\t   </div>\r\n\t\t\t\t<button onClick={this.reset}>Play Again!</button>   \r\n\t\t  </div>\t\r\n\t\t);\r\n\t\t\r\n\t\t\t\t\r\n\t}\r\n\t\t\r\n\t\r\n}\r\n\r\n\r\nexport default game;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Game from './game'\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Game />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}